#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyStudy.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyStudy")]
	public partial class MyStudyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertColleges(Colleges instance);
    partial void UpdateColleges(Colleges instance);
    partial void DeleteColleges(Colleges instance);
    partial void InsertProvinces(Provinces instance);
    partial void UpdateProvinces(Provinces instance);
    partial void DeleteProvinces(Provinces instance);
    partial void InsertZhx34(Zhx34 instance);
    partial void UpdateZhx34(Zhx34 instance);
    partial void DeleteZhx34(Zhx34 instance);
    partial void InsertFirstMajors(FirstMajors instance);
    partial void UpdateFirstMajors(FirstMajors instance);
    partial void DeleteFirstMajors(FirstMajors instance);
    partial void InsertSecondMajors(SecondMajors instance);
    partial void UpdateSecondMajors(SecondMajors instance);
    partial void DeleteSecondMajors(SecondMajors instance);
    partial void InsertThirdMajors(ThirdMajors instance);
    partial void UpdateThirdMajors(ThirdMajors instance);
    partial void DeleteThirdMajors(ThirdMajors instance);
    partial void InsertAdmins(Admins instance);
    partial void UpdateAdmins(Admins instance);
    partial void DeleteAdmins(Admins instance);
    partial void InsertNetView(NetView instance);
    partial void UpdateNetView(NetView instance);
    partial void DeleteNetView(NetView instance);
    #endregion
		
		public MyStudyDataContext() : 
				base(global::MyStudy.DAL.Properties.Settings.Default.MyStudyConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MyStudyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyStudyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyStudyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyStudyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Colleges> Colleges
		{
			get
			{
				return this.GetTable<Colleges>();
			}
		}
		
		public System.Data.Linq.Table<Provinces> Provinces
		{
			get
			{
				return this.GetTable<Provinces>();
			}
		}
		
		public System.Data.Linq.Table<Zhx34> Zhx34
		{
			get
			{
				return this.GetTable<Zhx34>();
			}
		}
		
		public System.Data.Linq.Table<FirstMajors> FirstMajors
		{
			get
			{
				return this.GetTable<FirstMajors>();
			}
		}
		
		public System.Data.Linq.Table<SecondMajors> SecondMajors
		{
			get
			{
				return this.GetTable<SecondMajors>();
			}
		}
		
		public System.Data.Linq.Table<ThirdMajors> ThirdMajors
		{
			get
			{
				return this.GetTable<ThirdMajors>();
			}
		}
		
		public System.Data.Linq.Table<Admins> Admins
		{
			get
			{
				return this.GetTable<Admins>();
			}
		}
		
		public System.Data.Linq.Table<NetView> NetView
		{
			get
			{
				return this.GetTable<NetView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Name;
		
		private string _Password;
		
		private string _StuNumber;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnStuNumberChanging(string value);
    partial void OnStuNumberChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuNumber", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string StuNumber
		{
			get
			{
				return this._StuNumber;
			}
			set
			{
				if ((this._StuNumber != value))
				{
					this.OnStuNumberChanging(value);
					this.SendPropertyChanging();
					this._StuNumber = value;
					this.SendPropertyChanged("StuNumber");
					this.OnStuNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colleges")]
	public partial class Colleges : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollegeId;
		
		private string _Name;
		
		private string _College;
		
		private string _StuNumber;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollegeIdChanging(int value);
    partial void OnCollegeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCollegeChanging(string value);
    partial void OnCollegeChanged();
    partial void OnStuNumberChanging(string value);
    partial void OnStuNumberChanged();
    #endregion
		
		public Colleges()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollegeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CollegeId
		{
			get
			{
				return this._CollegeId;
			}
			set
			{
				if ((this._CollegeId != value))
				{
					this.OnCollegeIdChanging(value);
					this.SendPropertyChanging();
					this._CollegeId = value;
					this.SendPropertyChanged("CollegeId");
					this.OnCollegeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_College", DbType="NVarChar(255)")]
		public string College
		{
			get
			{
				return this._College;
			}
			set
			{
				if ((this._College != value))
				{
					this.OnCollegeChanging(value);
					this.SendPropertyChanging();
					this._College = value;
					this.SendPropertyChanged("College");
					this.OnCollegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuNumber", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string StuNumber
		{
			get
			{
				return this._StuNumber;
			}
			set
			{
				if ((this._StuNumber != value))
				{
					this.OnStuNumberChanging(value);
					this.SendPropertyChanging();
					this._StuNumber = value;
					this.SendPropertyChanged("StuNumber");
					this.OnStuNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provinces")]
	public partial class Provinces : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProvId;
		
		private string _ProvName;
		
		private string _ProvAB;
		
		private string _ProvNo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvIdChanging(int value);
    partial void OnProvIdChanged();
    partial void OnProvNameChanging(string value);
    partial void OnProvNameChanged();
    partial void OnProvABChanging(string value);
    partial void OnProvABChanged();
    partial void OnProvNoChanging(string value);
    partial void OnProvNoChanged();
    #endregion
		
		public Provinces()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProvId
		{
			get
			{
				return this._ProvId;
			}
			set
			{
				if ((this._ProvId != value))
				{
					this.OnProvIdChanging(value);
					this.SendPropertyChanging();
					this._ProvId = value;
					this.SendPropertyChanged("ProvId");
					this.OnProvIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ProvName
		{
			get
			{
				return this._ProvName;
			}
			set
			{
				if ((this._ProvName != value))
				{
					this.OnProvNameChanging(value);
					this.SendPropertyChanging();
					this._ProvName = value;
					this.SendPropertyChanged("ProvName");
					this.OnProvNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvAB", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ProvAB
		{
			get
			{
				return this._ProvAB;
			}
			set
			{
				if ((this._ProvAB != value))
				{
					this.OnProvABChanging(value);
					this.SendPropertyChanging();
					this._ProvAB = value;
					this.SendPropertyChanged("ProvAB");
					this.OnProvABChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvNo", DbType="NVarChar(4)")]
		public string ProvNo
		{
			get
			{
				return this._ProvNo;
			}
			set
			{
				if ((this._ProvNo != value))
				{
					this.OnProvNoChanging(value);
					this.SendPropertyChanging();
					this._ProvNo = value;
					this.SendPropertyChanged("ProvNo");
					this.OnProvNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zhx34")]
	public partial class Zhx34 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Zhx34Id;
		
		private string _ZhxName;
		
		private string _ZhxProv;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZhx34IdChanging(int value);
    partial void OnZhx34IdChanged();
    partial void OnZhxNameChanging(string value);
    partial void OnZhxNameChanged();
    partial void OnZhxProvChanging(string value);
    partial void OnZhxProvChanged();
    #endregion
		
		public Zhx34()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhx34Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Zhx34Id
		{
			get
			{
				return this._Zhx34Id;
			}
			set
			{
				if ((this._Zhx34Id != value))
				{
					this.OnZhx34IdChanging(value);
					this.SendPropertyChanging();
					this._Zhx34Id = value;
					this.SendPropertyChanged("Zhx34Id");
					this.OnZhx34IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhxName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ZhxName
		{
			get
			{
				return this._ZhxName;
			}
			set
			{
				if ((this._ZhxName != value))
				{
					this.OnZhxNameChanging(value);
					this.SendPropertyChanging();
					this._ZhxName = value;
					this.SendPropertyChanged("ZhxName");
					this.OnZhxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhxProv", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ZhxProv
		{
			get
			{
				return this._ZhxProv;
			}
			set
			{
				if ((this._ZhxProv != value))
				{
					this.OnZhxProvChanging(value);
					this.SendPropertyChanging();
					this._ZhxProv = value;
					this.SendPropertyChanged("ZhxProv");
					this.OnZhxProvChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FirstMajors")]
	public partial class FirstMajors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FirstMajorId;
		
		private string _FirstMajorName;
		
		private string _FirstMajorNo;
		
		private EntitySet<SecondMajors> _SecondMajors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirstMajorIdChanging(int value);
    partial void OnFirstMajorIdChanged();
    partial void OnFirstMajorNameChanging(string value);
    partial void OnFirstMajorNameChanged();
    partial void OnFirstMajorNoChanging(string value);
    partial void OnFirstMajorNoChanged();
    #endregion
		
		public FirstMajors()
		{
			this._SecondMajors = new EntitySet<SecondMajors>(new Action<SecondMajors>(this.attach_SecondMajors), new Action<SecondMajors>(this.detach_SecondMajors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstMajorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FirstMajorId
		{
			get
			{
				return this._FirstMajorId;
			}
			set
			{
				if ((this._FirstMajorId != value))
				{
					this.OnFirstMajorIdChanging(value);
					this.SendPropertyChanging();
					this._FirstMajorId = value;
					this.SendPropertyChanged("FirstMajorId");
					this.OnFirstMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstMajorName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string FirstMajorName
		{
			get
			{
				return this._FirstMajorName;
			}
			set
			{
				if ((this._FirstMajorName != value))
				{
					this.OnFirstMajorNameChanging(value);
					this.SendPropertyChanging();
					this._FirstMajorName = value;
					this.SendPropertyChanged("FirstMajorName");
					this.OnFirstMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstMajorNo", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string FirstMajorNo
		{
			get
			{
				return this._FirstMajorNo;
			}
			set
			{
				if ((this._FirstMajorNo != value))
				{
					this.OnFirstMajorNoChanging(value);
					this.SendPropertyChanging();
					this._FirstMajorNo = value;
					this.SendPropertyChanged("FirstMajorNo");
					this.OnFirstMajorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstMajors_SecondMajors", Storage="_SecondMajors", ThisKey="FirstMajorId", OtherKey="FirstMajorId")]
		public EntitySet<SecondMajors> SecondMajors
		{
			get
			{
				return this._SecondMajors;
			}
			set
			{
				this._SecondMajors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecondMajors(SecondMajors entity)
		{
			this.SendPropertyChanging();
			entity.FirstMajors = this;
		}
		
		private void detach_SecondMajors(SecondMajors entity)
		{
			this.SendPropertyChanging();
			entity.FirstMajors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecondMajors")]
	public partial class SecondMajors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SecondMajorId;
		
		private string _SecondMajorName;
		
		private string _SecondMajorNo;
		
		private int _FirstMajorId;
		
		private EntitySet<ThirdMajors> _ThirdMajors;
		
		private EntityRef<FirstMajors> _FirstMajors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecondMajorIdChanging(int value);
    partial void OnSecondMajorIdChanged();
    partial void OnSecondMajorNameChanging(string value);
    partial void OnSecondMajorNameChanged();
    partial void OnSecondMajorNoChanging(string value);
    partial void OnSecondMajorNoChanged();
    partial void OnFirstMajorIdChanging(int value);
    partial void OnFirstMajorIdChanged();
    #endregion
		
		public SecondMajors()
		{
			this._ThirdMajors = new EntitySet<ThirdMajors>(new Action<ThirdMajors>(this.attach_ThirdMajors), new Action<ThirdMajors>(this.detach_ThirdMajors));
			this._FirstMajors = default(EntityRef<FirstMajors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondMajorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SecondMajorId
		{
			get
			{
				return this._SecondMajorId;
			}
			set
			{
				if ((this._SecondMajorId != value))
				{
					this.OnSecondMajorIdChanging(value);
					this.SendPropertyChanging();
					this._SecondMajorId = value;
					this.SendPropertyChanged("SecondMajorId");
					this.OnSecondMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondMajorName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string SecondMajorName
		{
			get
			{
				return this._SecondMajorName;
			}
			set
			{
				if ((this._SecondMajorName != value))
				{
					this.OnSecondMajorNameChanging(value);
					this.SendPropertyChanging();
					this._SecondMajorName = value;
					this.SendPropertyChanged("SecondMajorName");
					this.OnSecondMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondMajorNo", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string SecondMajorNo
		{
			get
			{
				return this._SecondMajorNo;
			}
			set
			{
				if ((this._SecondMajorNo != value))
				{
					this.OnSecondMajorNoChanging(value);
					this.SendPropertyChanging();
					this._SecondMajorNo = value;
					this.SendPropertyChanged("SecondMajorNo");
					this.OnSecondMajorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstMajorId", DbType="Int NOT NULL")]
		public int FirstMajorId
		{
			get
			{
				return this._FirstMajorId;
			}
			set
			{
				if ((this._FirstMajorId != value))
				{
					if (this._FirstMajors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFirstMajorIdChanging(value);
					this.SendPropertyChanging();
					this._FirstMajorId = value;
					this.SendPropertyChanged("FirstMajorId");
					this.OnFirstMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondMajors_ThirdMajors", Storage="_ThirdMajors", ThisKey="SecondMajorId", OtherKey="SecondMajorId")]
		public EntitySet<ThirdMajors> ThirdMajors
		{
			get
			{
				return this._ThirdMajors;
			}
			set
			{
				this._ThirdMajors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstMajors_SecondMajors", Storage="_FirstMajors", ThisKey="FirstMajorId", OtherKey="FirstMajorId", IsForeignKey=true)]
		public FirstMajors FirstMajors
		{
			get
			{
				return this._FirstMajors.Entity;
			}
			set
			{
				FirstMajors previousValue = this._FirstMajors.Entity;
				if (((previousValue != value) 
							|| (this._FirstMajors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstMajors.Entity = null;
						previousValue.SecondMajors.Remove(this);
					}
					this._FirstMajors.Entity = value;
					if ((value != null))
					{
						value.SecondMajors.Add(this);
						this._FirstMajorId = value.FirstMajorId;
					}
					else
					{
						this._FirstMajorId = default(int);
					}
					this.SendPropertyChanged("FirstMajors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThirdMajors(ThirdMajors entity)
		{
			this.SendPropertyChanging();
			entity.SecondMajors = this;
		}
		
		private void detach_ThirdMajors(ThirdMajors entity)
		{
			this.SendPropertyChanging();
			entity.SecondMajors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThirdMajors")]
	public partial class ThirdMajors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThirdMajorId;
		
		private string _ThirdMajorName;
		
		private string _ThirdMajorNo;
		
		private int _SecondMajorId;
		
		private EntityRef<SecondMajors> _SecondMajors;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThirdMajorIdChanging(int value);
    partial void OnThirdMajorIdChanged();
    partial void OnThirdMajorNameChanging(string value);
    partial void OnThirdMajorNameChanged();
    partial void OnThirdMajorNoChanging(string value);
    partial void OnThirdMajorNoChanged();
    partial void OnSecondMajorIdChanging(int value);
    partial void OnSecondMajorIdChanged();
    #endregion
		
		public ThirdMajors()
		{
			this._SecondMajors = default(EntityRef<SecondMajors>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdMajorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThirdMajorId
		{
			get
			{
				return this._ThirdMajorId;
			}
			set
			{
				if ((this._ThirdMajorId != value))
				{
					this.OnThirdMajorIdChanging(value);
					this.SendPropertyChanging();
					this._ThirdMajorId = value;
					this.SendPropertyChanged("ThirdMajorId");
					this.OnThirdMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdMajorName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ThirdMajorName
		{
			get
			{
				return this._ThirdMajorName;
			}
			set
			{
				if ((this._ThirdMajorName != value))
				{
					this.OnThirdMajorNameChanging(value);
					this.SendPropertyChanging();
					this._ThirdMajorName = value;
					this.SendPropertyChanged("ThirdMajorName");
					this.OnThirdMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdMajorNo", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string ThirdMajorNo
		{
			get
			{
				return this._ThirdMajorNo;
			}
			set
			{
				if ((this._ThirdMajorNo != value))
				{
					this.OnThirdMajorNoChanging(value);
					this.SendPropertyChanging();
					this._ThirdMajorNo = value;
					this.SendPropertyChanged("ThirdMajorNo");
					this.OnThirdMajorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondMajorId", DbType="Int NOT NULL")]
		public int SecondMajorId
		{
			get
			{
				return this._SecondMajorId;
			}
			set
			{
				if ((this._SecondMajorId != value))
				{
					if (this._SecondMajors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondMajorIdChanging(value);
					this.SendPropertyChanging();
					this._SecondMajorId = value;
					this.SendPropertyChanged("SecondMajorId");
					this.OnSecondMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondMajors_ThirdMajors", Storage="_SecondMajors", ThisKey="SecondMajorId", OtherKey="SecondMajorId", IsForeignKey=true)]
		public SecondMajors SecondMajors
		{
			get
			{
				return this._SecondMajors.Entity;
			}
			set
			{
				SecondMajors previousValue = this._SecondMajors.Entity;
				if (((previousValue != value) 
							|| (this._SecondMajors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondMajors.Entity = null;
						previousValue.ThirdMajors.Remove(this);
					}
					this._SecondMajors.Entity = value;
					if ((value != null))
					{
						value.ThirdMajors.Add(this);
						this._SecondMajorId = value.SecondMajorId;
					}
					else
					{
						this._SecondMajorId = default(int);
					}
					this.SendPropertyChanged("SecondMajors");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminId;
		
		private string _AdminNo;
		
		private string _Password;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnAdminNoChanging(string value);
    partial void OnAdminNoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Admins()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNo", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string AdminNo
		{
			get
			{
				return this._AdminNo;
			}
			set
			{
				if ((this._AdminNo != value))
				{
					this.OnAdminNoChanging(value);
					this.SendPropertyChanging();
					this._AdminNo = value;
					this.SendPropertyChanged("AdminNo");
					this.OnAdminNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetView")]
	public partial class NetView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IPAddr;
		
		private string _IPSrc;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIPAddrChanging(string value);
    partial void OnIPAddrChanged();
    partial void OnIPSrcChanging(string value);
    partial void OnIPSrcChanged();
    #endregion
		
		public NetView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddr", DbType="NVarChar(80)")]
		public string IPAddr
		{
			get
			{
				return this._IPAddr;
			}
			set
			{
				if ((this._IPAddr != value))
				{
					this.OnIPAddrChanging(value);
					this.SendPropertyChanging();
					this._IPAddr = value;
					this.SendPropertyChanged("IPAddr");
					this.OnIPAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPSrc", DbType="NVarChar(255)")]
		public string IPSrc
		{
			get
			{
				return this._IPSrc;
			}
			set
			{
				if ((this._IPSrc != value))
				{
					this.OnIPSrcChanging(value);
					this.SendPropertyChanging();
					this._IPSrc = value;
					this.SendPropertyChanged("IPSrc");
					this.OnIPSrcChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
